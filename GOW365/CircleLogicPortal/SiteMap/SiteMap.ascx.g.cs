//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.18033
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CircleLogicPortal.SiteMap {
    using System.Web.UI.WebControls.Expressions;
    using System.Web.UI.HtmlControls;
    using System.Collections;
    using System.Text;
    using System.Web.UI;
    using System.Collections.Generic;
    using System.Linq;
    using System.Xml.Linq;
    using Microsoft.SharePoint.WebPartPages;
    using System.Web.SessionState;
    using System.Configuration;
    using Microsoft.SharePoint;
    using System.Web;
    using System.Web.DynamicData;
    using System.Web.Caching;
    using System.Web.Profile;
    using System.ComponentModel.DataAnnotations;
    using System.Web.UI.WebControls;
    using System.Web.Security;
    using System;
    using Microsoft.SharePoint.Utilities;
    using System.Text.RegularExpressions;
    using System.Collections.Specialized;
    using System.Web.UI.WebControls.WebParts;
    using Microsoft.SharePoint.WebControls;
    
    
    public partial class SiteMap {
        
        public static implicit operator global::System.Web.UI.TemplateControl(SiteMap target) 
        {
            return target == null ? null : target.TemplateControl;
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        private void @__BuildControlTree(global::CircleLogicPortal.SiteMap.SiteMap @__ctrl) {
            @__ctrl.SetRenderMethodDelegate(new System.Web.UI.RenderMethod(this.@__Render__control1));
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        private void @__Render__control1(System.Web.UI.HtmlTextWriter @__w, System.Web.UI.Control parameterContainer) {
            @__w.Write("\r\n\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"");
                                     @__w.Write(ImgUrl);

            @__w.Write("SiteMap.css\"/>\r\n\r\n\r\n<script type=\"text/javascript\">\r\n\r\n    ExecuteOrDelayUntilScr" +
                    "iptLoaded(");
                            @__w.Write(this.ClientID);

            @__w.Write("Initialize, \"sp.js\");\r\n\r\n    //Retrieve  the Tab items\r\n    function ");
     @__w.Write(this.ClientID);

            @__w.Write("Initialize() {\r\n        //Get the current SP context\r\n        clientContext = new" +
                    " SP.ClientContext.get_current();\r\n        web = clientContext.get_web();\r\n      " +
                    "  this.");
     @__w.Write(this.ClientID );

            @__w.Write("webcols = web.getSubwebsForCurrentUser(null)\r\n        clientContext.load(");
                   @__w.Write(this.ClientID );

            @__w.Write("webcols);\r\n        try {\r\n            clientContext.executeQueryAsync(Function.cr" +
                    "eateDelegate(this, this.");
                                                                       @__w.Write(this.ClientID);

            @__w.Write(@"_SitesLoadSuccess), Function.createDelegate(this, this.onListItemsLoadFailed));
        }
        catch (err)
        {
        }
    }

    function onListItemsLoadFailed(sender, args) {
        SP.UI.Notify.addNotification(""List items load failed: "" + args.get_message(), false);
    }

    function ");
     @__w.Write(this.ClientID);

            @__w.Write("_SitesLoadSuccess(sender, args) {\r\n        try {\r\n            var webEnumerator =" +
                    " this.");
                             @__w.Write(this.ClientID );

            @__w.Write("webcols.getEnumerator();\r\n            ");
    @__w.Write(this.ClientID );

            @__w.Write(@"navs = {};
            var i = 0;
            while (webEnumerator.moveNext()) {
                
                var oWeb = webEnumerator.get_current();
                
                //<div class=""sitebox""><h3>팀사이트</h3><ul class=""sitemapbox""><li><a>사이트 콘텐츠</a></li></ul></div>
                var itemHtml = ""<div class=\""sitebox\"" id=\""");
                                                    @__w.Write(this.ClientID);

            @__w.Write("web\" + i.toString() + \"\\\"><h3><a href=\'\" + oWeb.get_url() + \"\'>\" + oWeb.get_title" +
                    "() + \"</h3><ul class=\\\"sitemapbox\\\" id=\\\"");
                                                                                                                                                                                                @__w.Write(this.ClientID);

            @__w.Write("sitemapbox\" + i.toString() + \"\\\"></ul></div>\";\r\n                \r\n               " +
                    " ");
        @__w.Write(this.ClientID );

            @__w.Write("navs[i] = oWeb.get_navigation().get_quickLaunch();\r\n                clientContext" +
                    ".load(");
                           @__w.Write(this.ClientID );

            @__w.Write("navs[i]);\r\n\r\n                jQuery(\'#");
                 @__w.Write(this.ClientID );

            @__w.Write("_sitemap\').append(itemHtml);\r\n                i++;\r\n            }\r\n        }\r\n   " +
                    "     catch (err) {\r\n        }\r\n        \r\n        \r\n        try {\r\n            cl" +
                    "ientContext.executeQueryAsync(Function.createDelegate(this, this.");
                                                                       @__w.Write(this.ClientID);

            @__w.Write("_NavsLoadSuccess), Function.createDelegate(this, this.onListItemsLoadFailed));\r\n " +
                    "       }\r\n        catch (err) {\r\n        }\r\n    }\r\n    function ");
     @__w.Write(this.ClientID);

            @__w.Write("_NavsLoadSuccess(sender, args) {\r\n        try {\r\n            ");
    @__w.Write(this.ClientID );

            @__w.Write("childnavs = new Array();\r\n            for (var nav in ");
                    @__w.Write(this.ClientID );

            @__w.Write("navs)\r\n            {\r\n                var qEnumerator = ");
                          @__w.Write(this.ClientID );

            @__w.Write("navs[nav].getEnumerator();\r\n                var cno = 0;\r\n                ");
        @__w.Write(this.ClientID );

            @__w.Write("childnavs[nav] = new Array();\r\n                while (qEnumerator.moveNext()) {\r\n" +
                    "                    var quickLaunch = qEnumerator.get_current();\r\n              " +
                    "      var itemHtml = \"<li id=\'");
                                    @__w.Write(this.ClientID );

            @__w.Write("li\"+nav.toString()+cno.toString()+\"\'><a>\" + quickLaunch.get_title() + \"</a></li>\"" +
                    ";\r\n                    jQuery(\'#");
                     @__w.Write(this.ClientID );

            @__w.Write("sitemapbox\' + nav.toString()).append(itemHtml);\r\n                    ");
            @__w.Write(this.ClientID );

            @__w.Write("childnavs[nav][cno] = quickLaunch.get_children();\r\n                    clientCont" +
                    "ext.load(");
                               @__w.Write(this.ClientID );

            @__w.Write("childnavs[nav][cno]);\r\n                    cno++;\r\n                }\r\n           " +
                    " }\r\n        }\r\n        catch (err) {\r\n        }\r\n        try {\r\n            clie" +
                    "ntContext.executeQueryAsync(Function.createDelegate(this, this.");
                                                                       @__w.Write(this.ClientID);

            @__w.Write("_CNavsLoadSuccess), Function.createDelegate(this, this.onListItemsLoadFailed));\r\n" +
                    "        }\r\n        catch (err) {\r\n        }\r\n\r\n    }\r\n    function ");
     @__w.Write(this.ClientID);

            @__w.Write("_CNavsLoadSuccess(sender, args) {\r\n        try {\r\n            for (var i = 0; i <" +
                    " ");
                        @__w.Write(this.ClientID );

            @__w.Write("childnavs.length; i++) {\r\n                for (var j = 0; j < ");
                            @__w.Write(this.ClientID );

            @__w.Write("childnavs[i].length; j++) {\r\n                    var qEnumerator = ");
                              @__w.Write(this.ClientID );

            @__w.Write(@"childnavs[i][j].getEnumerator();
                    var cno = 0;
                    var itemHtml =""<ul class='sitemapnormal'>"";
                    while (qEnumerator.moveNext()) {
                        var quickLaunch = qEnumerator.get_current();
                        itemHtml += ""<li><a>"" + quickLaunch.get_title() + ""</a></li>"";
                        cno++;
                    }
                    itemHtml += ""</ul>""
                    jQuery('#");
                     @__w.Write(this.ClientID );

            @__w.Write("li\' + i.toString() + j.toString()).append(itemHtml);\r\n                }\r\n        " +
                    "    }\r\n                \r\n        }\r\n        catch (err) {\r\n        }\r\n      \r\n\r\n" +
                    "    }\r\n\r\n</script>\r\n\r\n<div class=\"sitemap_head\">\r\n\t<img src=\"");
   @__w.Write(ImgUrl);

            @__w.Write("sitemap_head.gif\" />\r\n</div>\r\n<div class=\"sitemap\" id=\"");
                 @__w.Write(this.ClientID );

            @__w.Write("_sitemap\">\r\n\t\r\n</div>\r\n\r\n");
        }
        
        private void InitializeControl() {
            this.@__BuildControlTree(this);
            this.Load += new global::System.EventHandler(this.Page_Load);
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        protected virtual object Eval(string expression) {
            return global::System.Web.UI.DataBinder.Eval(this.Page.GetDataItem(), expression);
        }
        
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        protected virtual string Eval(string expression, string format) {
            return global::System.Web.UI.DataBinder.Eval(this.Page.GetDataItem(), expression, format);
        }
    }
}
